#####################################################################
# 	Macros
#####################################################################

[gcode_macro PRINT_START] 
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(printer.heater_bed.target)|float %}
        {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(printer.extruder.target)|float %}
    BED_MESH_PROFILE LOAD=default ; load the default mesh 
    M140 S{BED_TEMP}  # Start bed heating
    M104 S{EXTRUDER_TEMP}  # Start Hotend heating
    G90  # Use absolute coordinates
    G28 # home
    G92 E0 # Reset Extruder
    G1 Z0.45 F300
    M190 S{BED_TEMP} # Wait for bed to reach temperature
    M109 S{EXTRUDER_TEMP}  # Set and wait for nozzle to reach temperature
    G1 X1.5 Y20 F5000.0  #Move to start position
    G1 Y120.0 F600.0 E15 # Draw the first line
    G1 X0.5 F1000.0 #Move to side a little
    G1 Y20 F600 E15 # Draw the second line   
    G92 E0  #eset Extruder

[gcode_macro PRINT_END]
gcode:
    G91 #Relative positionning
    G1 E-2 F2700 #Retract a bit
    G1 E-8 X5 Y5 Z3 F3000 #Retract
    G90 #Absolute positionning
    G1 X0 Y400 # Present print
    M106 S0 # Turn-off fan
    M104 S0 #Turn-off hotend
    M140 S0 # Turn-off bed
    M84 X Y E # Disable all steppers but Z

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    M106 S0
    G91
    G1 Z10 F900  ; lift nozzle to avoid scratching
    G90
    M84          ; disable all steppers
    CANCEL_PRINT_BASE
    ACTION_CANCEL

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}
    
[gcode_macro MANUAL_LEVEL]
description: Home and measure for maunual leveling adjustments
gcode:
  G28
  SCREWS_TILT_CALCULATE
  G90
  G1 F3000 X213 Y213 Z25